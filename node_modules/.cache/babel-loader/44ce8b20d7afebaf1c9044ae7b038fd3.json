{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MatthewNJ\\\\Downloads\\\\mern-statck-example-main-backup\\\\mern-stack-example-main\\\\mern\\\\client\\\\src\\\\components\\\\edit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; // This will require to npm install axios\n\nimport axios from \"axios\";\nimport { withRouter } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Edit = () => {\n  _s();\n\n  // This is the constructor that stores the data.\n  console.log(\"The constructor in edit is called\");\n  const [person_name, setName] = useState(\"\");\n  const [person_position, setPosition] = useState(\"\");\n  const [person_level, setLevel] = useState(\"\");\n  const [records, setRecords] = useState([]); // This will get the record based on the id from the database.\n\n  useEffect(() => {\n    console.log(\"COMPEONENTN MEOUNTED\");\n    axios.get(\"http://localhost:3000/record/\" + this.props.match.params.id).then(response => (setName(response.data.person_name), setPosition(response.data.person_position), setLevel(response.data.person_level))).catch(function (error) {\n      console.log(error);\n    });\n  }, []); // These methods will update the state properties.\n\n  function onChangePersonName(eb) {\n    console.log(eb.target.value);\n\n    if (eb.target.value.length < 13) {\n      this.setState({\n        person_name: eb.target.value\n      });\n    }\n\n    if (eb.target.value.length === 12) {\n      console.log(\"you cannot add anymore\");\n    }\n  }\n\n  function onChangePersonPosition(e) {\n    this.setState({\n      person_position: e.target.value\n    });\n  }\n\n  function onChangePersonLevel(e) {\n    this.setState({\n      person_level: e.target.value\n    });\n  } // This function will handle the submission.\n\n\n  function onSubmit(e) {\n    e.preventDefault();\n    const newEditedperson = {\n      person_name: person_name,\n      person_position: person_position,\n      person_level: person_level\n    };\n    console.log(newEditedperson); // This will send a post request to update the data in the database.\n\n    axios.post(\"http://localhost:3000/update/\" + this.props.match.params.id, newEditedperson).then(res => console.log(res.data));\n    this.props.history.push(\"/\");\n  } // This following section will display the update-form that takes the input from the user to update the data.\n\n\n  console.log(\"COOMPONENT RENDERED\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      align: \"center\",\n      children: \"Update Record\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Person's Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: person_name,\n          onChange: onChangePersonName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Position: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: person_position,\n          onChange: onChangePersonPosition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-check-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"priorityOptions\",\n            id: \"priorityLow\",\n            value: \"Intern\",\n            checked: person_level === \"Intern\",\n            onChange: onChangePersonLevel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            children: \"Intern\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-check-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"priorityOptions\",\n            id: \"priorityMedium\",\n            value: \"Junior\",\n            checked: person_level === \"Junior\",\n            onChange: onChangePersonLevel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            children: \"Junior\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-check-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"priorityOptions\",\n            id: \"priorityHigh\",\n            value: \"Senior\",\n            checked: person_level === \"Senior\",\n            onChange: onChangePersonLevel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            children: \"Senior\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Update Record\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}; // You can get access to the history object's properties and the closest <Route>'s match via the withRouter\n// higher-order component. This makes it easier for us to edit our records.\n\n\n_s(Edit, \"tcqn1V8oDKk9ws7w4ZAA9defwjc=\");\n\n_c = Edit;\nexport default _c2 = withRouter(Edit);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Edit\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/MatthewNJ/Downloads/mern-statck-example-main-backup/mern-stack-example-main/mern/client/src/components/edit.js"],"names":["React","useEffect","useState","axios","withRouter","Edit","console","log","person_name","setName","person_position","setPosition","person_level","setLevel","records","setRecords","get","props","match","params","id","then","response","data","catch","error","onChangePersonName","eb","target","value","length","setState","onChangePersonPosition","e","onChangePersonLevel","onSubmit","preventDefault","newEditedperson","post","res","history","push"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n// This will require to npm install axios\nimport axios from \"axios\";\nimport { withRouter } from \"react-router\";\n\nconst Edit = () => {\n  // This is the constructor that stores the data.\n  console.log(\"The constructor in edit is called\")\n  const [person_name, setName] = useState(\"\")\n  const [person_position, setPosition] = useState(\"\")\n  const [person_level, setLevel] = useState(\"\")\n  const [records, setRecords] = useState([])\n\n  // This will get the record based on the id from the database.\n  useEffect(() => {\n    console.log(\"COMPEONENTN MEOUNTED\")\n    axios\n      .get(\"http://localhost:3000/record/\" + this.props.match.params.id)\n      .then((response) => (\n        setName(response.data.person_name),\n        setPosition(response.data.person_position),\n        setLevel(response.data.person_level))\n      ).catch(function (error) {\n        console.log(error);\n      })\n  }, [])\n\n  // These methods will update the state properties.\n  function onChangePersonName(eb) {\n    console.log(eb.target.value)\n    if (eb.target.value.length < 13) {\n      this.setState({\n        person_name: eb.target.value,\n      });\n    }\n\n    if (eb.target.value.length === 12) {\n      console.log(\"you cannot add anymore\")\n    }\n  }\n\n  function onChangePersonPosition(e) {\n    this.setState({\n      person_position: e.target.value,\n    });\n  }\n\n  function onChangePersonLevel(e) {\n    this.setState({\n      person_level: e.target.value,\n    });\n  }\n\n  // This function will handle the submission.\n  function onSubmit(e) {\n    e.preventDefault();\n    const newEditedperson = {\n\n      person_name: person_name,\n      person_position: person_position,\n      person_level: person_level,\n    };\n    console.log(newEditedperson);\n\n    // This will send a post request to update the data in the database.\n    axios\n      .post(\n        \"http://localhost:3000/update/\" + this.props.match.params.id,\n        newEditedperson\n      )\n      .then((res) => console.log(res.data));\n\n    this.props.history.push(\"/\");\n  }\n\n  // This following section will display the update-form that takes the input from the user to update the data.\n  console.log(\"COOMPONENT RENDERED\")\n\n  return (\n    <div>\n      <h3 align=\"center\">Update Record</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <label>Person's Name: </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={person_name}\n            onChange={onChangePersonName}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Position: </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={person_position}\n            onChange={onChangePersonPosition}\n          />\n        </div>\n        <div className=\"form-group\">\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"priorityOptions\"\n              id=\"priorityLow\"\n              value=\"Intern\"\n              checked={person_level === \"Intern\"}\n              onChange={onChangePersonLevel}\n            />\n            <label className=\"form-check-label\">Intern</label>\n          </div>\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"priorityOptions\"\n              id=\"priorityMedium\"\n              value=\"Junior\"\n              checked={person_level === \"Junior\"}\n              onChange={onChangePersonLevel}\n            />\n            <label className=\"form-check-label\">Junior</label>\n          </div>\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"priorityOptions\"\n              id=\"priorityHigh\"\n              value=\"Senior\"\n              checked={person_level === \"Senior\"}\n              onChange={onChangePersonLevel}\n            />\n            <label className=\"form-check-label\">Senior</label>\n          </div>\n        </div>\n        <br />\n\n        <div className=\"form-group\">\n          <input\n            type=\"submit\"\n            value=\"Update Record\"\n            className=\"btn btn-primary\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n\n}\n\n// You can get access to the history object's properties and the closest <Route>'s match via the withRouter\n// higher-order component. This makes it easier for us to edit our records.\n\nexport default withRouter(Edit);\n"]},"metadata":{},"sourceType":"module"}